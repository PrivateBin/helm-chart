---
{{- $controller := default "Deployment" .Values.controller.kind -}}
{{- if or (eq $controller "Deployment") (eq $controller "Both") }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "privatebin.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "privatebin.name" . }}
    helm.sh/chart: {{ include "privatebin.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    {{- if .Values.additionalLabels }}
      {{- toYaml .Values.additionalLabels | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "privatebin.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "privatebin.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        {{- if .Values.additionalLabels }}
          {{- toYaml .Values.additionalLabels | nindent 8 }}
        {{- end }}
      {{- if .Values.podAnnotations }}
      annotations:
        {{- toYaml .Values.podAnnotations | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ include "privatebin.serviceAccountName" . }}
      automountServiceAccountToken: false
      {{- if .Values.securityContext }}
      securityContext:
        {{- with .Values.securityContext }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          {{- if .Values.podSecurityContext }}
          securityContext:
            {{- with .Values.podSecurityContext }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: configs
              mountPath: /srv/cfg
            {{- if .Values.controller.emptyDir }}
            - name: storage
              mountPath: {{ .Values.datapath }}
            {{- end }}
            - name: run
              mountPath: /run
            - name: tmp
              mountPath: /tmp
            - name: nginx-cache
              mountPath: /var/lib/nginx/tmp
            {{- if .Values.extraVolumeMounts }}
            {{- include "privatebin.tplvalues.render" (dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
{{- if .Values.configsAsProjected }}
        - name: configs
          projected:
            defaultMode: {{ default 420 .Values.configsProjected.defaultMode }}
            sources:
              - configMap:
                  name: {{ include "privatebin.fullname" . }}-configs
{{- range $cm := (default (list) .Values.configsProjected.configMaps) }}
              - configMap:
                  name: {{ $cm }}
{{- end }}
{{- range $sec := (default (list) .Values.configsProjected.secrets) }}
              - secret:
                  name: {{ $sec }}
{{- end }}
{{- else }}
        - name: configs
          configMap:
            name: {{ include "privatebin.fullname" . }}-configs
{{- end }}
        - name: run
          emptyDir:
            medium: "Memory"
        - name: tmp
          emptyDir:
            medium: "Memory"
        - name: nginx-cache
          emptyDir: {}
        {{- if .Values.controller.emptyDir }}
        - name: storage
          emptyDir: {}
        {{- end }}
      {{- if .Values.extraVolumes }}
      {{- include "privatebin.tplvalues.render" (dict "value" .Values.extraVolumes "context" $) | nindent 8 }}
      {{- end }}
{{- end }}
